---
import { Image } from "astro:assets";

import { type Person } from "~/data";
import BioLinks from "./BioLinks.astro";
import { Markdown } from "@astropub/md";

interface Props {
	class?: string;
	href: string;
	person: Person;
}

const { class: className, person: speaker, ...rest } = Astro.props;

const image = import(`../assets/avatars/${speaker.slug}.jpg`);
---

<li class:list={["speaker", className]} {...rest}>
	<a class="speaker-image-container" href={Astro.props.href}>
		<Image alt="" class="speaker-image" src={image} width={128} height={128} />
	</a>
	<div class="speaker-text">
		<div class="speaker-text-links">
			<div class="name">{speaker.name}</div>
			<div class="details">
				{
					speaker.qualification && (
						<div>
							<Markdown.Inline of={speaker.qualification} />
						</div>
					)
				}
				{
					speaker.role && (
						<div>
							<Markdown.Inline of={speaker.role} />
						</div>
					)
				}
			</div>
		</div>
		<BioLinks
			class="speaker-bio-links"
			name={speaker.name}
			links={speaker.links}
		/>
	</div>
</li>

<style>
	.speaker {
		position: relative;
		align-items: center;
		display: flex;
		gap: 1rem;
		text-align: left;
	}

	.speaker-image {
		border-radius: 100%;
		height: var(--imageSize);
		width: var(--imageSize);
	}

	.speaker-text {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}

	.speaker-text-links {
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		gap: 0.5rem;
		text-decoration: none;
	}

	.name {
		color: var(--colorForegroundBody);
		font-size: var(--fontSizeH4);
		display: flex;
		line-height: 0.9em;
	}

	.details {
		font-size: var(--fontSizeBodySmaller);
		font-weight: var(--fontWeightLight);
		display: flex;
		gap: 0.25rem;
		flex-direction: column;
	}

	.speaker-bio-links {
		z-index: 1;
	}
</style>
